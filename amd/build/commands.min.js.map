{"version":3,"file":"commands.min.js","sources":["../src/commands.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Commands for the Moodle \"tiny_ubicast\" plugin.\n *\n * @module      tiny_ubicast\n * @copyright   2025 UbiCast {@link https://www.ubicast.eu}\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport {getButtonImage} from 'editor_tiny/utils';\nimport {get_string as getString} from 'core/str';\nimport {icon, component} from 'tiny_ubicast/common';\nimport {getUbicastURL, getUseFilter, getCourseId} from 'tiny_ubicast/options';\nimport UbicastModal from 'tiny_ubicast/modal';\n\n/**\n * Add a correction on the current selection.\n * @param {tinyMCE} editor\n * @returns {void}\n */\nasync function insertMedia(editor) {\n    const courseId = getCourseId(editor);\n    const useFilter = getUseFilter(editor) === '1';\n    const ubicastURL = getUbicastURL(editor);\n\n    const modal = await UbicastModal.create({\n        templateContext: {\n            elementid: editor.id,\n            mediawidth: '100%',\n            mediaheight: '300px',\n        }\n    });\n\n    const root = await modal.getRoot()[0];\n    const form = root.querySelector('form');\n\n    form.addEventListener('submit', (event) => {\n        event.preventDefault();\n\n        const mediaId = form.querySelector('input[name=mediaid]').value;\n        const mediaWidth = form.querySelector('input[name=mediawidth]').value;\n        const mediaHeight = form.querySelector('input[name=mediaheight]').value;\n        const mediaThumb = form.querySelector('input[name=mediaimg]').value || '/static/mediaserver/images/video.svg';\n\n        let html;\n        if (mediaId) {\n            if (useFilter) {\n                html = '<img class=\"atto_ubicast mediaid_' + mediaId + '\" ' +\n                    'style=\"display: block; width: ' + mediaWidth + '; height: ' + mediaHeight + ';\" ' +\n                    'src=\"' + ubicastURL + mediaThumb + '\" alt=\"\"/>';\n            } else {\n                html = '<iframe class=\"nudgis-iframe\" ' +\n                    'style=\"width:' + mediaWidth + '; height: ' + mediaHeight + '; background-color: #ddd;\" ' +\n                    'src=\"' + window.M.cfg.wwwroot + '/lib/editor/tiny/plugins/ubicast/view.php' +\n                    '?course=' + courseId + ' &video= + ' + mediaId + '\" ' +\n                    'allow=\"autoplay; encrypted-media\" allowfullscreen=\"allowfullscreen\">' +\n                    '</iframe>';\n            }\n        }\n\n        if (html) {\n            editor.insertContent(html);\n        }\n        modal.destroy();\n    });\n    root.querySelector('.tiny_ubicast_close').addEventListener('click', (event) => {\n        event.preventDefault();\n        modal.destroy();\n    });\n    root.querySelector('.tiny_ubicast_insert').addEventListener('click', (event) => {\n        event.preventDefault();\n        form.dispatchEvent(new Event('submit'));\n    });\n\n    setTimeout(function() {\n        // Use setTimeout to wait for MediaSelector loading.\n        new window.MediaSelector({\n            moodleURL: window.M.cfg.wwwroot + '/mod/ubicast/lti.php?id=' + courseId,\n            nudgisURL: ubicastURL,\n            filterBySpeaker: true,\n            target: editor.id + '_tiny_ubicast_dialog'\n        });\n    }, (window.MediaSelector ? 10 : 2000));\n}\n\n\nexport const getSetup = async() => {\n    const [\n        tooltipText,\n        buttonImage,\n    ] = await Promise.all([\n        getString('tooltip', component),\n        getButtonImage('icon', component),\n    ]);\n\n    return (editor) => {\n        editor.ui.registry.addIcon(icon, buttonImage.html);\n\n        // Register the insert media Toolbar Button.\n        editor.ui.registry.addButton('ubicast_media', {\n            icon: icon,\n            tooltip: tooltipText,\n            onAction: () => insertMedia(editor)\n        });\n    };\n};\n"],"names":["async","tooltipText","buttonImage","Promise","all","component","editor","ui","registry","addIcon","icon","html","addButton","tooltip","onAction","courseId","useFilter","ubicastURL","modal","UbicastModal","create","templateContext","elementid","id","mediawidth","mediaheight","root","getRoot","form","querySelector","addEventListener","event","preventDefault","mediaId","value","mediaWidth","mediaHeight","mediaThumb","window","M","cfg","wwwroot","insertContent","destroy","dispatchEvent","Event","setTimeout","MediaSelector","moodleURL","nudgisURL","filterBySpeaker","target","insertMedia"],"mappings":";;;;;;;8JAmGwBA,gBAEhBC,YACAC,mBACMC,QAAQC,IAAI,EAClB,mBAAU,UAAWC,oBACrB,yBAAe,OAAQA,4BAGnBC,SACJA,OAAOC,GAAGC,SAASC,QAAQC,aAAMR,YAAYS,MAG7CL,OAAOC,GAAGC,SAASI,UAAU,gBAAiB,CAC1CF,KAAMA,aACNG,QAASZ,YACTa,SAAU,mBAlFKR,cACjBS,UAAW,wBAAYT,QACvBU,UAAqC,OAAzB,yBAAaV,QACzBW,YAAa,0BAAcX,QAE3BY,YAAcC,eAAaC,OAAO,CACpCC,gBAAiB,CACbC,UAAWhB,OAAOiB,GAClBC,WAAY,OACZC,YAAa,WAIfC,WAAaR,MAAMS,UAAU,GAC7BC,KAAOF,KAAKG,cAAc,QAEhCD,KAAKE,iBAAiB,UAAWC,QAC7BA,MAAMC,uBAEAC,QAAUL,KAAKC,cAAc,uBAAuBK,MACpDC,WAAaP,KAAKC,cAAc,0BAA0BK,MAC1DE,YAAcR,KAAKC,cAAc,2BAA2BK,MAC5DG,WAAaT,KAAKC,cAAc,wBAAwBK,OAAS,2CAEnEvB,KACAsB,UAEItB,KADAK,UACO,oCAAsCiB,QAAtC,mCACgCE,WAAa,aAAeC,YAD5D,WAEOnB,WAAaoB,WAAa,aAEjC,8CACeF,WAAa,aAAeC,YAD3C,mCAEOE,OAAOC,EAAEC,IAAIC,QAFpB,oDAGU1B,SAAW,cAAgBkB,QAHrC,mFASXtB,MACAL,OAAOoC,cAAc/B,MAEzBO,MAAMyB,aAEVjB,KAAKG,cAAc,uBAAuBC,iBAAiB,SAAUC,QACjEA,MAAMC,iBACNd,MAAMyB,aAEVjB,KAAKG,cAAc,wBAAwBC,iBAAiB,SAAUC,QAClEA,MAAMC,iBACNJ,KAAKgB,cAAc,IAAIC,MAAM,cAGjCC,YAAW,eAEHR,OAAOS,cAAc,CACrBC,UAAWV,OAAOC,EAAEC,IAAIC,QAAU,2BAA6B1B,SAC/DkC,UAAWhC,WACXiC,iBAAiB,EACjBC,OAAQ7C,OAAOiB,GAAK,2BAExBe,OAAOS,cAAgB,GAAK,KAoBRK,CAAY9C"}